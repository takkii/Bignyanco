import { BaseApi } from './Base';
import { AsyncTabpage } from './Tabpage';
import { AsyncBuffer } from './Buffer';
export interface AsyncWindow extends Window, Promise<Window> {
}
export declare class Window extends BaseApi {
    prefix: string;
    /**
     * The windowid that not change within a Vim session
     */
    readonly id: number;
    /** Get current buffer of window */
    readonly buffer: AsyncBuffer;
    /** Get the Tabpage that contains the window */
    readonly tabpage: AsyncTabpage;
    /** Get cursor position */
    /** Set cursor position */
    cursor: [number, number] | Promise<[number, number]>;
    /** Get window height by number of rows */
    /** Set window height by number of rows */
    height: number | Promise<number>;
    /** Get window width by number of columns */
    /** Set window width by number of columns  */
    width: number | Promise<number>;
    /** Get window position */
    readonly position: Promise<[number, number]>;
    /** 0-indexed, on-screen window position(row) in display cells. */
    readonly row: Promise<number>;
    /** 0-indexed, on-screen window position(col) in display cells. */
    readonly col: Promise<number>;
    /** Is window valid */
    readonly valid: Promise<boolean>;
    /** Get window number */
    readonly number: Promise<number>;
}
